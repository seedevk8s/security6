<svg viewBox="0 0 1400 950" xmlns="http://www.w3.org/2000/svg">
  <!-- 배경 -->
  <rect width="1400" height="950" fill="#f8f9fa"/>
  
  <!-- 제목 -->
  <text x="700" y="30" text-anchor="middle" font-size="22" font-weight="bold" fill="#333">
    Spring Security 인증 아키텍처 with Tomcat WAS
  </text>
  
  <!-- Tomcat WAS 전체 컨테이너 -->
  <rect x="40" y="50" width="1320" height="880" fill="none" stroke="#d32f2f" stroke-width="3" rx="10"/>
  <text x="70" y="80" font-size="18" font-weight="bold" fill="#d32f2f">Tomcat WAS</text>
  
  <!-- HTTP Connector (Coyote) -->
  <rect x="80" y="100" width="1240" height="70" fill="#ffebee" stroke="#ef5350" stroke-width="2" rx="5"/>
  <text x="700" y="125" text-anchor="middle" font-size="14" font-weight="bold">HTTP Connector (Coyote)</text>
  <text x="700" y="145" text-anchor="middle" font-size="11">Port 8080 Listening | HTTP Request/Response 처리 | Thread Pool 관리</text>
  <text x="700" y="160" text-anchor="middle" font-size="10" fill="#666">TCP/IP 소켓 통신 → HTTP 프로토콜 파싱</text>
  
  <!-- Web Container (Catalina) -->
  <rect x="80" y="190" width="1240" height="720" fill="#e3f2fd" stroke="#1976d2" stroke-width="3" rx="8"/>
  <text x="110" y="220" font-size="16" font-weight="bold" fill="#1976d2">Web Container (Catalina Engine)</text>
  <text x="450" y="220" font-size="11" fill="#666">서블릿 컨테이너 - 서블릿/JSP 실행 환경</text>
  
  <!-- Web Container 기능 설명 -->
  <rect x="110" y="240" width="1180" height="50" fill="#bbdefb" stroke="#1565c0" stroke-width="1" rx="3"/>
  <text x="130" y="260" font-size="12" font-weight="bold">Container 핵심 기능:</text>
  <text x="130" y="278" font-size="10">• 서블릿 생명주기 관리 (init/service/destroy)</text>
  <text x="400" y="278" font-size="10">• Request/Response 객체 생성</text>
  <text x="620" y="278" font-size="10">• Thread-per-Request 모델</text>
  <text x="820" y="278" font-size="10">• HttpSession 관리</text>
  <text x="980" y="278" font-size="10">• ServletContext 제공</text>
  <text x="1120" y="278" font-size="10">• Filter Chain 실행</text>
  
  <!-- 클라이언트 -->
  <rect x="110" y="310" width="160" height="70" fill="#81c784" stroke="#388e3c" stroke-width="2" rx="5"/>
  <text x="190" y="335" text-anchor="middle" font-size="13" font-weight="bold">Client Browser</text>
  <text x="190" y="355" text-anchor="middle" font-size="10">POST /login</text>
  <text x="190" y="370" text-anchor="middle" font-size="10">username/password</text>
  
  <!-- Spring Security Filter Chain -->
  <rect x="320" y="310" width="970" height="70" fill="#fff3e0" stroke="#f57c00" stroke-width="2" rx="5"/>
  <text x="805" y="335" text-anchor="middle" font-size="13" font-weight="bold">Spring Security Filter Chain</text>
  <text x="805" y="352" text-anchor="middle" font-size="10" fill="#666">[Web Container가 관리]</text>
  <text x="805" y="368" text-anchor="middle" font-size="10">DelegatingFilterProxy → FilterChainProxy → UsernamePasswordAuthenticationFilter</text>
  
  <!-- DispatcherServlet -->
  <rect x="320" y="390" width="970" height="40" fill="#e8f5e9" stroke="#43a047" stroke-width="2" rx="5"/>
  <text x="805" y="408" text-anchor="middle" font-size="12" font-weight="bold">DispatcherServlet</text>
  <text x="805" y="422" text-anchor="middle" font-size="10">[Front Controller - Spring MVC 진입점]</text>
  
  <!-- Spring Application Context 영역 -->
  <rect x="110" y="450" width="1180" height="440" fill="#fafafa" stroke="#9e9e9e" stroke-width="2" rx="5" stroke-dasharray="5,5"/>
  <text x="130" y="475" font-size="13" font-weight="bold" fill="#616161">Spring Application Context</text>
  
  <!-- SecurityFilterChain Config -->
  <rect x="130" y="490" width="270" height="110" fill="#e8f5e9" stroke="#4caf50" stroke-width="2" rx="5"/>
  <text x="265" y="512" text-anchor="middle" font-size="12" font-weight="bold">SecurityFilterChain</text>
  <text x="140" y="532" font-size="9" font-family="monospace">@Bean</text>
  <text x="140" y="546" font-size="9" font-family="monospace">SecurityFilterChain(HttpSecurity http) {</text>
  <text x="150" y="560" font-size="9" font-family="monospace">  http.formLogin()</text>
  <text x="150" y="574" font-size="9" font-family="monospace">      .authorizeHttpRequests()</text>
  <text x="150" y="588" font-size="9" font-family="monospace">      .csrf().disable();</text>
  
  <!-- AuthenticationManager -->
  <rect x="420" y="490" width="270" height="110" fill="#f3e5f5" stroke="#9c27b0" stroke-width="2" rx="5"/>
  <text x="555" y="512" text-anchor="middle" font-size="12" font-weight="bold">AuthenticationManager</text>
  <text x="555" y="530" text-anchor="middle" font-size="10">(ProviderManager)</text>
  <text x="430" y="550" font-size="10">• Provider들 관리</text>
  <text x="430" y="565" font-size="10">• 인증 처리 위임</text>
  <text x="430" y="580" font-size="10">• Authentication 반환</text>
  
  <!-- AuthenticationProvider -->
  <rect x="710" y="490" width="270" height="110" fill="#e1f5fe" stroke="#03a9f4" stroke-width="2" rx="5"/>
  <text x="845" y="512" text-anchor="middle" font-size="12" font-weight="bold">AuthenticationProvider</text>
  <text x="845" y="530" text-anchor="middle" font-size="10">(DaoAuthenticationProvider)</text>
  <text x="720" y="550" font-size="10">• 실제 인증 로직</text>
  <text x="720" y="565" font-size="10">• 비밀번호 검증</text>
  <text x="720" y="580" font-size="10">• UserDetailsService 호출</text>
  
  <!-- JWT Token Generator -->
  <rect x="1000" y="490" width="270" height="110" fill="#efebe9" stroke="#795548" stroke-width="2" rx="5"/>
  <text x="1135" y="512" text-anchor="middle" font-size="12" font-weight="bold">JWT Token Generator</text>
  <text x="1010" y="535" font-size="10">• Access Token 생성</text>
  <text x="1010" y="550" font-size="10">• Refresh Token 생성</text>
  <text x="1010" y="565" font-size="10">• Claims 설정</text>
  <text x="1010" y="580" font-size="10">• Secret Key 서명</text>
  
  <!-- UserDetailsService -->
  <rect x="130" y="620" width="270" height="110" fill="#fce4ec" stroke="#e91e63" stroke-width="2" rx="5"/>
  <text x="265" y="642" text-anchor="middle" font-size="12" font-weight="bold">UserDetailsService</text>
  <text x="140" y="665" font-size="10">• loadUserByUsername()</text>
  <text x="140" y="680" font-size="10">• DB에서 사용자 조회</text>
  <text x="140" y="695" font-size="10">• UserDetails 생성</text>
  <text x="140" y="710" font-size="10">• 권한 정보 로드</text>
  
  <!-- UserDetails -->
  <rect x="420" y="620" width="270" height="110" fill="#f0f4c3" stroke="#827717" stroke-width="2" rx="5"/>
  <text x="555" y="642" text-anchor="middle" font-size="12" font-weight="bold">UserDetails</text>
  <text x="430" y="665" font-size="10">• Username</text>
  <text x="430" y="680" font-size="10">• Password (encoded)</text>
  <text x="430" y="695" font-size="10">• Authorities (ROLE_USER)</text>
  <text x="430" y="710" font-size="10">• Account Status</text>
  
  <!-- SecurityContext -->
  <rect x="710" y="620" width="270" height="110" fill="#e8eaf6" stroke="#3f51b5" stroke-width="2" rx="5"/>
  <text x="845" y="642" text-anchor="middle" font-size="12" font-weight="bold">SecurityContext</text>
  <text x="720" y="665" font-size="10">• Authentication 보관</text>
  <text x="720" y="680" font-size="10">• ThreadLocal 저장</text>
  <text x="720" y="695" font-size="10">• SecurityContextHolder</text>
  <text x="720" y="710" font-size="10">• Request 단위 관리</text>
  
  <!-- Session/Database -->
  <rect x="1000" y="620" width="270" height="110" fill="#ffebee" stroke="#d32f2f" stroke-width="2" rx="5"/>
  <text x="1135" y="642" text-anchor="middle" font-size="12" font-weight="bold">Session / Database</text>
  <text x="1010" y="665" font-size="10">• HttpSession (JSESSIONID)</text>
  <text x="1010" y="680" font-size="10">• User/Role Tables</text>
  <text x="1010" y="695" font-size="10">• Token Storage</text>
  <text x="1010" y="710" font-size="10">• Audit Logs</text>
  
  <!-- Authentication Object -->
  <rect x="130" y="750" width="540" height="110" fill="#fff8e1" stroke="#ff8f00" stroke-width="2" rx="5"/>
  <text x="400" y="772" text-anchor="middle" font-size="12" font-weight="bold">Authentication Object (인증 완료 후)</text>
  <text x="140" y="795" font-size="10">• Principal: UserDetails 객체</text>
  <text x="140" y="810" font-size="10">• Credentials: null (보안상 제거)</text>
  <text x="140" y="825" font-size="10">• Authorities: [ROLE_USER, ROLE_ADMIN]</text>
  <text x="140" y="840" font-size="10">• isAuthenticated: true</text>
  <text x="400" y="795" font-size="10">• Details: WebAuthenticationDetails</text>
  <text x="400" y="810" font-size="10">• Session ID: xxx-xxx-xxx</text>
  <text x="400" y="825" font-size="10">• Remote Address: 192.168.1.1</text>
  <text x="400" y="840" font-size="10">• Timestamp: 2025-01-20 10:30:00</text>
  
  <!-- 응답 -->
  <rect x="700" y="750" width="570" height="110" fill="#c8e6c9" stroke="#388e3c" stroke-width="2" rx="5"/>
  <text x="985" y="772" text-anchor="middle" font-size="12" font-weight="bold">인증 성공 응답</text>
  <text x="710" y="795" font-size="10">• HTTP 200 OK / 302 Redirect</text>
  <text x="710" y="810" font-size="10">• Set-Cookie: JSESSIONID=xxx</text>
  <text x="710" y="825" font-size="10">• Authorization: Bearer {JWT_TOKEN}</text>
  <text x="710" y="840" font-size="10">• Location: /home (redirect)</text>
  <text x="960" y="795" font-size="10">• Response Body: {success: true}</text>
  <text x="960" y="810" font-size="10">• User Info: {id, name, roles}</text>
  <text x="960" y="825" font-size="10">• Access Token: xxx.yyy.zzz</text>
  <text x="960" y="840" font-size="10">• Refresh Token: aaa.bbb.ccc</text>
  
  <!-- 화살표 정의 -->
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#333"/>
    </marker>
  </defs>
  
  <!-- 플로우 화살표 -->
  <line x1="270" y1="345" x2="320" y2="345" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="285" y="340" font-size="9" fill="#666">①</text>
  
  <line x1="805" y1="380" x2="805" y2="390" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="815" y="387" font-size="9" fill="#666">②</text>
  
  <line x1="805" y1="430" x2="555" y2="490" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="700" y="460" font-size="9" fill="#666">③</text>
  
  <line x1="555" y1="600" x2="845" y2="490" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="700" y="545" font-size="9" fill="#666">④</text>
  
  <line x1="845" y1="600" x2="265" y2="620" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="550" y="610" font-size="9" fill="#666">⑤</text>
  
  <line x1="265" y1="730" x2="555" y2="620" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="410" y="675" font-size="9" fill="#666">⑥</text>
  
  <line x1="555" y1="730" x2="845" y2="620" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="700" y="675" font-size="9" fill="#666">⑦</text>
  
  <line x1="845" y1="730" x2="1135" y2="490" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="990" y="610" font-size="9" fill="#666">⑧</text>
</svg>